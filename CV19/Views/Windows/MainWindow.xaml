<!--local меняем на xmlns:l-->
<!--xmlns подключает главные пространства именн.xmlns:x х- это псевданим простраства имен-->
<!--clr-namespace: подключаем сами простраства имен которые нам понадобятся с его помощью-->
<!--xmls: vm добовляем пространство имен вьюмодели,-->
<!--Title="MainWindow" свяжем свойство титл с титл нашей вьюмодели Title={Binding...}где {} расширение размедки, если не знаешь что писать то сначалло пишешь Path= и среда подскажет что можно написать в качестве свойства-->
<Window x:Class="CV19.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:CV19.ViewModels"
        xmlns:l="clr-namespace:CV19" 
        mc:Ignorable="d"
        Title="{Binding Title}" 
        Height="450" Width="800">
    <Window.DataContext>
        <!--дата контекст иерархичский и применяется в зависимости от места объявления если в Window то применяется на все окно-->
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <!--<Grid>
        UpdateSourceTrigger=PropertyChanged обнавляет элемент при изменении
        <TextBox HorizontalAlignment="Left" 
                 Margin="88,49"
                 Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}" 
                 TextWrapping="Wrap" 
                 VerticalAlignment="Top" 
                 Width="312"/>

    </Grid>-->
    <!--вместо грида используем док панель, она позволяет притягвать содержимое к соответствующим краям, и последний элемент растягивается на оставшееся пространство-->
    <DockPanel>
        <!-- DockPanel.Dock="Top" расположение в докпанеле-->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Файл">
                <MenuItem Header="Выход"></MenuItem>
            </MenuItem>
            <MenuItem Header="Помощь">
                <MenuItem Header="О программе"></MenuItem>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem MinWidth="150" MaxWidth="300">
                <TextBlock Text="Загрузка"/>
            </StatusBarItem>
            <StatusBarItem>
                <ProgressBar Width="120" Height="14" Value="30"/>
            </StatusBarItem>
        </StatusBar>
        <!--так как нам надо растянуть табконтрол на все оставшееся пространство пишем его в конце-->
        <TabControl>
            <TabItem Header="Вкладка 1">
                <Grid>
                    <Grid.RowDefinitions>
                        <!--можно задавать минимальные и максимальные ширину и высоту-->
                        <RowDefinition Height="83*"/>
                        <RowDefinition Height="111*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="81*"/>
                        <ColumnDefinition x:Name="ddd1" Width="316*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle  Grid.Column="0" Grid.Row="0"  Fill="Blue" Stroke="Red" StrokeThickness="3" RadiusX="5" RadiusY="7"/>
                    <Ellipse Grid.Column="1" Grid.Row="0"  Fill="Blue" Stroke="Red" StrokeThickness="3"/>
                    <!--за грид сплитер можно тянуть меняя размер содержимого-->
                    <GridSplitter x:Name="gsFrma1" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"
                                  HorizontalAlignment="Right" Width="4" MouseDoubleClick="GridSplitter_MouseDoubleClick"/>
                </Grid>
            </TabItem>
            <TabItem Header="Вкладка 2"></TabItem>
        </TabControl>
    </DockPanel>
</Window>
